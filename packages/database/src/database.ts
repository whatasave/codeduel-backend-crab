/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Auth {
  created_at: Generated<Timestamp>;
  provider: string;
  provider_id: Generated<number>;
  updated_at: Generated<Timestamp>;
  user_id: Generated<number>;
}

export interface AuthSession {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  ip: string | null;
  provider: string;
  token_id: string | null;
  updated_at: Generated<Timestamp>;
  user_agent: string | null;
  user_id: Generated<number>;
}

export interface Challenge {
  content: string;
  created_at: Generated<Timestamp>;
  description: string;
  id: Generated<number>;
  owner_id: number;
  title: string;
  updated_at: Generated<Timestamp>;
}

export interface Game {
  allowed_languages: Json;
  challenge_id: number;
  created_at: Generated<Timestamp>;
  duration: number;
  ended_at: Timestamp | null;
  host_id: number;
  id: Generated<number>;
  max_players: number;
  updated_at: Generated<Timestamp>;
}

export interface GameUser {
  code: string | null;
  game_id: number;
  language: string | null;
  submitted_at: Timestamp | null;
  tests_passed: Generated<number>;
  user_id: number;
}

export interface TestCase {
  challenge_id: number;
  hidden: boolean;
  id: Generated<number>;
  input: string;
  output: string;
}

export interface User {
  avatar: string | null;
  background_image: string | null;
  biography: string | null;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  name: string | null;
  updated_at: Generated<Timestamp>;
  username: string;
}

export interface DB {
  auth: Auth;
  auth_session: AuthSession;
  challenge: Challenge;
  game: Game;
  game_user: GameUser;
  test_case: TestCase;
  user: User;
}
